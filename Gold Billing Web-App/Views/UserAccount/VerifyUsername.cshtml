@model Gold_Billing_WebApp.Models.VerifyUsernameViewModel
@{
    Layout = "~/Views/Shared/_loginlayout.cshtml";
}

<section class="section min-vh-100 d-flex flex-column align-items-center justify-content-center py-4">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-4 col-md-6 d-flex flex-column align-items-center justify-content-center">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex justify-content-center py-4">
                            <a class="align-items-center">
                                <img src="~/images/ERPIcon.png" alt="Gold Billing Logo" width="150px" />
                            </a>
                        </div>
                        <div class="d-flex justify-content-center py-4">
                            <a class="logo d-flex align-items-center w-auto">
                                <span class="d-none d-lg-block">Gold Billing WebApp</span>
                            </a>
                        </div>
                        <div class="pt-4 pb-2">
                            <h5 class="card-title text-center pb-0 fs-4">Forgot Password</h5>
                            <p class="text-center small">
                                @(Model.IsUsernameVerified ? "Enter your new password" : "Enter your username to reset your password")
                            </p>
                        </div>

                        @if (ViewBag.UsernameError != null || ViewBag.PasswordError != null)
                        {
                            <div class="alert alert-danger">
                                @(ViewBag.UsernameError ?? ViewBag.PasswordError)
                            </div>
                        }

                        <form asp-action="VerifyUsername" method="post" class="row g-3 needs-validation" novalidate>
                            @Html.AntiForgeryToken()

                            <div class="col-12">
                                <label class="form-label">Username</label>
                                <input type="text" asp-for="Username" class="form-control" required="@(!Model.IsUsernameVerified)" readonly="@Model.IsUsernameVerified">
                                <div class="invalid-feedback">Please enter your username.</div>
                                @if (ViewBag.UsernameError != null)
                                {
                                    <span class="text-danger">@ViewBag.UsernameError</span>
                                    <script>console.log("UsernameError: @ViewBag.UsernameError");</script>
                                }
                            </div>

                            @if (Model.IsUsernameVerified)
                            {
                                <div class="col-12">
                                    <label class="form-label">New Password</label>
                                    <div class="input-group has-validation">
                                        <input type="password" asp-for="NewPassword" class="form-control" id="newPassword" required>
                                        <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('newPassword', this)">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <div class="invalid-feedback">Please enter a new password.</div>
                                    </div>
                                    <span asp-validation-for="NewPassword" class="text-danger"></span>
                                </div>

                                <div class="col-12">
                                    <label class="form-label">Confirm Password</label>
                                    <div class="input-group has-validation">
                                        <input type="password" asp-for="ConfirmPassword" class="form-control" id="confirmPassword" required>
                                        <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('confirmPassword', this)">
                                            <i class="bi bi-eye"></i>
                                        </button>
                                        <div class="invalid-feedback">Please confirm your password.</div>
                                    </div>
                                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                                    @if (ViewBag.PasswordError != null)
                                    {
                                        <span class="text-danger">@ViewBag.PasswordError</span>
                                    }
                                </div>
                            }

                            <div class="col-12">
                                <button class="btn btn-primary w-100" type="submit">
                                    @(Model.IsUsernameVerified ? "Reset Password" : "Verify")
                                </button>
                            </div>

                            <div class="col-12 text-center">
                                <p class="small mb-0"><a asp-action="Login">Back to Login</a></p>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(inputId, button) {
            var input = document.getElementById(inputId);
            var icon = button.querySelector('i');
            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                input.type = "password";
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        }

        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    // Only add the 'was-validated' class for styling
                    form.classList.add('was-validated');
                    // Do not prevent submission; let server-side validation handle errors
                }, false);
            });
        })();
    </script>
}