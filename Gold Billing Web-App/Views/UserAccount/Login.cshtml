@model Gold_Billing_Web_App.Models.LoginViewModel
@{
    ViewData["Title"] = "Login";
    Layout = "~/Views/Shared/_loginlayout.cshtml";
}
<link href="~/css/login.css" rel="stylesheet" />
<section class="login-section">
    <div class="login-card">
        <div class="d-flex justify-content-center py-4">
            <a class="align-items-center">
                <img src="~/images/ERPIcon.png" alt="Gold Billing Logo" width="120px" style="border-radius: 50%; border: 2px solid #3498db;" />
            </a>
        </div>
        <div class="d-flex justify-content-center py-2">
            <h2 class="logo d-flex align-items-center w-auto">
                <span class="fw-bold text-muted">Gold Billing WebApp</span>
            </h2>
        </div>
            <h3 class="card-title justify-content-center d-flex pt-5">Login</h3>
        <div class="pt-3 pb-2 justify-content-center d-flex">
            <p class="text-muted">Enter your credentials to access your account</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (ViewBag.UsernameError != null || ViewBag.PasswordError != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @(ViewBag.UsernameError ?? ViewBag.PasswordError)
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <form asp-action="Login" method="post" class="row g-3 needs-validation" novalidate>
            @Html.AntiForgeryToken()

            <div class="col-12">
                <label asp-for="Username" class="form-label">Username</label>
                <div class="input-group has-validation">
                    <span class="input-group-text"><i class="bi bi-person"></i></span>
                    <input type="text" asp-for="Username" class="form-control" required placeholder="Your username">
                    <div class="invalid-feedback">Please enter your username.</div>
                </div>
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>

            <div class="col-12">
                <label asp-for="Password" class="form-label">Password</label>
                <div class="input-group has-validation">
                    <span class="input-group-text"><i class="bi bi-lock"></i></span>
                    <input type="password" asp-for="Password" class="form-control" id="password" required placeholder="Your password">
                    <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('password', this)">
                        <i class="bi bi-eye"></i>
                    </button>
                    <div class="invalid-feedback">Please enter your password.</div>
                </div>
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="col-12">
                <button class="btn btn-primary w-100" type="submit">Login</button>
            </div>

            <div class="col-12 text-center links">
                <p class="small mb-0">
                    <a asp-controller="UserAccount" asp-action="VerifyUsername">Forgot Password?</a>
                    <a asp-controller="UserAccount" asp-action="Register">Register</a>
                </p>
            </div>
        </form>
    </div>
</section>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function togglePassword(inputId, button) {
            var input = document.getElementById(inputId);
            var icon = button.querySelector('i');
            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove('bi-eye');
                icon.classList.add('bi-eye-slash');
            } else {
                input.type = "password";
                icon.classList.remove('bi-eye-slash');
                icon.classList.add('bi-eye');
            }
        }

        (function () {
            'use strict';
            var forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms).forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
        })();
    </script>
}