@model IEnumerable<Gold_Billing_Web_App.Models.AccountModel>

@{
    ViewData["Title"] = "Account List";
}
<div class="card">
    <div class="card-body">
        <h5 class="card-title text-center fs-3">Accounts</h5>
        <div class="mb-3">
            <a asp-action="AddEditAccount" asp-controller="Account" class="btn btn-outline-primary">
                Add Account Group
            </a>
        </div>
        <div class="table-responsive" style="max-height: 500px; overflow-y: auto;">
            <table class="table table-striped table-bordered">
                <thead class="table-dark text-center">
                    <tr>
                        <th scope="col" style="white-space: nowrap;">Account Id</th>
                        <th scope="col" style="white-space: nowrap;">Date</th>
                        <th scope="col" style="white-space: nowrap;">Account Name</th>
                        <th scope="col" style="white-space: nowrap;">Account Group Name</th>
                        <th scope="col" style="white-space: nowrap;">Address</th>
                        <th scope="col" style="white-space: nowrap;">City</th>
                        <th scope="col" style="white-space: nowrap;">Pincode</th>
                        <th scope="col" style="white-space: nowrap;">Mobile No</th>
                        <th scope="col" style="white-space: nowrap;">Phone No</th>
                        <th scope="col" style="white-space: nowrap;">Email</th>
                        <th scope="col" style="white-space: nowrap;">Fine</th>
                        <th scope="col" style="white-space: nowrap;">Amount</th>
                        <th scope="col" style="white-space: nowrap;" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var account in Model)
                    {
                        <tr>
                            <td style="white-space: nowrap;">@account.AccountId</td>
                            <td style="white-space: nowrap;">@account.Date.ToString("yyyy-MM-dd")</td>
                            <td style="white-space: nowrap;">@account.AccountName</td>
                            <td style="white-space: nowrap;">@account.GroupAccount?.GroupName</td>
                            <td style="white-space: nowrap;">@account.Address</td>
                            <td style="white-space: nowrap;">@account.City</td>
                            <td style="white-space: nowrap;">@account.Pincode</td>
                            <td style="white-space: nowrap;">@account.MobileNo</td>
                            <td style="white-space: nowrap;">@account.PhoneNo</td>
                            <td style="white-space: nowrap;">@account.Email</td>
                            <td style="white-space: nowrap;">@account.Fine</td>
                            <td style="white-space: nowrap;">@account.Amount</td>
                            <td class="text-center" style="white-space: nowrap;">
                                <div class="btn-group" role="group">
                                    <a asp-action="AddEditAccount" asp-controller="Account" asp-route-AccountId="@account.AccountId" class="btn btn-outline-primary btn-sm">Edit</a>
                                    <form asp-action="DeleteAccount" asp-controller="Account" method="post" class="delete-form" data-account-id="@account.AccountId">
                                        <input type="hidden" name="AccountId" value="@account.AccountId" />
                                        <button type="submit" class="btn btn-outline-danger btn-sm">Delete</button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Store messages from TempData as JavaScript variables
        const successMessage = '@Html.Raw(TempData["SuccessMessage"])';
        const errorMessage = '@Html.Raw(TempData["ErrorMessage"])';

        document.addEventListener('DOMContentLoaded', function () {
            // Show success message if present
            if (successMessage) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: successMessage,
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
            }

            // Show error message if present
            if (errorMessage) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: errorMessage,
                    confirmButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            }

            // Add SweetAlert confirmation for delete forms
            document.querySelectorAll('.delete-form').forEach(form => {
                form.addEventListener('submit', function (e) {
                    e.preventDefault(); // Prevent immediate form submission

                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'Do you really want to delete this account? This action cannot be undone.',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete it!',
                        cancelButtonText: 'No, keep it'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(form.action, {
                                method: 'POST',
                                body: new FormData(form),
                                headers: {
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                                }
                            })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Server error: ' + response.statusText);
                                }
                                return response.json();
                            })
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Deleted!',
                                        text: 'The account has been deleted.',
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        form.closest('tr').remove();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Cannot Delete',
                                        text: data.error || 'Failed to delete the account.',
                                        confirmButtonColor: '#d33',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })
                            .catch(error => {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'An error occurred: ' + error.message,
                                    confirmButtonColor: '#d33',
                                    confirmButtonText: 'OK'
                                });
                            });
                        }
                    });
                });
            });
        });
    </script>
}