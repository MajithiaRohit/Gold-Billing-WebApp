@model Gold_Billing_Web_App.Models.TransactionViewModel
@{
    ViewBag.Title = $"Generate {Model.TransactionType} Bill";

    string bgColor = Model.TransactionType switch
    {
        "Purchase" => "#f8d7da",
        "PurchaseReturn" => "#d4edda",
        "Sale" => "#fff3cd",
        "SaleReturn" => "#cce5ff",
        _ => "#f8d7da"
    };

    bool isEdit = !string.IsNullOrEmpty(Model.BillNo) && ViewBag.IsExistingTransaction == true;
}

<div class="container p-3" style="background-color: @bgColor; border-radius: 10px;">
    <h3 class="text-center mb-3 mt-3">@ViewBag.Title</h3>

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger" role="alert">
            <h4 class="alert-heading">Validation Errors</h4>
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }

    <form asp-action="AddTransaction" method="post" id="transactionForm">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="TransactionType" />
        <hr class="mb-3 mt-3" />
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-label">Account</label>
                <select id="accountSelect" name="SelectedAccountId" class="form-control" >
                    <option value="">Select Account</option>
                    @foreach (var account in ViewBag.AccountDropDown)
                    {
                        <option value="@account.Id" selected="@(ViewBag.SelectedAccountId == account.Id ? "selected" : null)">@account.AccountName</option>
                    }
                </select>
                <span id="account-error" class="text-danger"></span>
            </div>
            <div class="col-md-4">
                <label asp-for="Date" class="form-label">Date</label>
                <input asp-for="Date" type="date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="col-md-4 form-group">
                <label asp-for="BillNo" class="form-label">Bill Number</label>
                <input asp-for="BillNo" class="form-control" readonly />
                <span asp-validation-for="BillNo" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="Narration" class="form-label">Narration</label>
                <textarea asp-for="Narration" class="form-control"></textarea>
                <span asp-validation-for="Narration" class="text-danger"></span>
            </div>
        </div>

        <div class="table-responsive">
            <table class="table table-bordered" id="transactionTable">
                <thead class="bg-light">
                    <tr>
                        <th>Item Name</th>
                        <th>Pc</th>
                        <th>Gr.Wt.</th>
                        <th>Less</th>
                        <th>Net.Wt.</th>
                        <th>Tunch (%)</th>
                        <th>Wstg (%)</th>
                        <th>TW (%)</th>
                        <th>Rate</th>
                        <th>Gold Fine</th>
                        <th>Total Amount</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Items.Count; i++)
                    {
                        <tr>
                            <td>
                                <input asp-for="Items[i].Id" type="hidden" />
                                <input asp-for="Items[i].TransactionType" type="hidden" value="@Model.TransactionType" />
                                <input asp-for="Items[i].AccountId" type="hidden" class="account-id-input" />
                                <select asp-for="Items[i].ItemId" class="form-control item-select">
                                    <option value="">Select Item</option>
                                    @foreach (var item in ViewBag.ItemDropDown)
                                    {
                                        <option value="@item.Id" data-group="@item.GroupName" selected="@(Model.Items[i].ItemId == item.Id ? "selected" : null)">@item.ItemName</option>
                                    }
                                </select>
                                <span asp-validation-for="Items[i].ItemId" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Pc" type="number" class="form-control pc-input" min="0" step="1" />
                                <span asp-validation-for="Items[i].Pc" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Weight" type="number" class="form-control weight-input" min="0" step="0.01" />
                                <span asp-validation-for="Items[i].Weight" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Less" type="number" class="form-control less-input" min="0" step="0.01" />
                                <span asp-validation-for="Items[i].Less" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].NetWt" type="number" class="form-control netwt-input" step="0.01" readonly />
                                <span asp-validation-for="Items[i].NetWt" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Tunch" type="number" class="form-control tunch-input" min="0" step="0.01" />
                                <span asp-validation-for="Items[i].Tunch" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Wastage" type="number" class="form-control wastage-input" min="0" step="0.01" />
                                <span asp-validation-for="Items[i].Wastage" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].TW" type="number" class="form-control tw-input" step="0.01" readonly />
                                <span asp-validation-for="Items[i].TW" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Rate" type="number" class="form-control rate-input" min="0" step="0.01" />
                                <span asp-validation-for="Items[i].Rate" class="text-danger"></span>
                            </td>
                            <td>
                                <input asp-for="Items[i].Fine" type="number" class="form-control fine-input" step="0.01" readonly />
                                <span asp-validation-for="Items[i].Fine" class="text-danger"></span>
                            </td>
                            <td>
                                <input type="number" class="form-control amount-input" step="0.01" readonly value="@Model.Items[i].Amount?.ToString("F2")" />
                                <input type="hidden" asp-for="Items[i].Amount" class="hidden-amount-input" />
                                <span asp-validation-for="Items[i].Amount" class="text-danger"></span>
                            </td>
                            <td>
                                @if (i > 0)
                                {
                                    <button type="button" class="btn btn-danger btn-sm" onclick="removeRow(this)">Remove</button>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="bg-secondary text-white">
                        <td colspan="2" class="text-right"><strong>Total:</strong></td>
                        <td><input type="number" step="0.01" id="totalGrWt" class="form-control" readonly /></td>
                        <td><input type="number" step="0.01" id="totalLess" class="form-control" readonly /></td>
                        <td><input type="number" step="0.01" id="totalNetWt" class="form-control" readonly /></td>
                        <td colspan="4"></td>
                        <td><input type="number" step="0.01" id="totalFine" class="form-control" readonly /></td>
                        <td><input type="number" step="0.01" id="totalAmount" class="form-control" readonly /></td>
                        <td></td>
                    </tr>
                    <tr class="bg-info text-white">
                        <td colspan="7"></td>
                        <td colspan="2" class="text-right">
                            <div id="prevDate" style="color: red; font-size: 0.8em;"></div>
                            <strong>Previous Balance:</strong>
                        </td>
                        <td>
                            <input type="number" step="0.01" id="prevFine" class="form-control" readonly />
                            
                        </td>
                        <td><input type="number" step="0.01" id="prevAmount" class="form-control" readonly /></td>
                        <td></td>
                    </tr>
                    <tr class="bg-warning text-dark">
                        <td colspan="7"></td>
                        <td colspan="2" class="text-right"><strong>Current Transaction:</strong></td>
                        <td><input type="number" step="0.01" id="currentFine" class="form-control" readonly /></td>
                        <td><input type="number" step="0.01" id="currentAmount" class="form-control" readonly /></td>
                        <td></td>
                    </tr>
                    <tr class="bg-success text-white">
                        <td colspan="7"></td>
                        <td colspan="2" class="text-right"><strong>Total Balance:</strong></td>
                        <td><input type="number" step="0.01" id="totalBalanceFine" class="form-control" readonly /></td>
                        <td><input type="number" step="0.01" id="totalBalanceAmount" class="form-control" readonly /></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
            <button type="button" class="btn btn-primary mb-3" onclick="addNewRow('@Model.TransactionType')">Add New Row</button>
        </div>

        <div class="row mt-3">
            <div class="col-md-12 text-center">
                <button type="submit" class="btn btn-success">Save</button>
                <button type="button" class="btn btn-info" onclick="printTransaction()">Print</button>
                <button type="button" class="btn btn-secondary" onclick="exportToExcel()">Export to Excel</button>
                <button type="button" class="btn btn-secondary" onclick="exportToPDF()">Export to PDF</button>
                @if (ViewBag.IsExistingTransaction)
                {
                    <button type="button" class="btn btn-danger" onclick="deleteTransaction('@Model.BillNo')">Delete Transaction</button>
                }
                <a href="@Url.Action("ViewStock", "OpeningStock")" class="btn btn-danger">Cancel</a>
            </div>
        </div>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
<script src="~/js/transaction.js"></script>

<script>
    window.transactionType = '@Model.TransactionType';
    const addTransactionUrl = '@Url.Action("AddTransaction", "Transaction")';
    setupFormSubmission(addTransactionUrl);
    setupEventListeners();
</script>