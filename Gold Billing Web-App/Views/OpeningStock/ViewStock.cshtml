@using System.Data
@model DataTable

<div class="card">
    <div class="card-body">
        <h3 class="mt-5 text-center">Current Stock</h3>
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-info">@TempData["Message"]</div>
        }
        <hr />
        <div class="table-responsive" style="max-height: 500px; overflow-y: auto; overflow-x: hidden; width: 100%;">
            <table class="table table-striped table-bordered" style="width: 100%;">
                <thead class="table-dark text-center">
                    <tr>
                        <th>Bill No</th>
                        <th>Item Name</th>
                        <th>Pc</th>
                        <th>Gr.Wt.</th>
                        <th>Less</th>
                        <th>Net Wt.</th>
                        <th>Tunch</th>
                        <th>Wastage</th>
                        <th>T+W</th>
                        <th>Fine</th>
                        <th>Amount</th>
                        <th>Last Updated</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (DataRow row in Model.Rows)
                    {
                        string billNo = row["BillNo"]?.ToString() ?? string.Empty;
                        string redirectUrl = string.Empty;

                        if (!string.IsNullOrEmpty(billNo))
                        {
                            if (billNo.StartsWith("P"))
                            {
                                redirectUrl = Url.Action("AddTransaction", "Transaction", new { type = "Purchase", billNo = billNo })!;
                            }
                            else if (billNo.StartsWith("S"))
                            {
                                redirectUrl = Url.Action("AddTransaction", "Transaction", new { type = "Sale", billNo = billNo })!;
                            }
                            else if (billNo.StartsWith("PR"))
                            {
                                redirectUrl = Url.Action("AddTransaction", "Transaction", new { type = "PurchaseReturn", billNo = billNo })!;
                            }
                            else if (billNo.StartsWith("SR"))
                            {
                                redirectUrl = Url.Action("AddTransaction", "Transaction", new { type = "SaleReturn", billNo = billNo })!;
                            }
                            else if (billNo.StartsWith("BILL") || billNo.StartsWith("NEW"))
                            {
                                redirectUrl = Url.Action("EditOpeningStock", "OpeningStock", new { billNo = billNo })!;
                            }
                        }

                        <tr class="zoom-row"
                            style="cursor: pointer;"
                            onclick="window.location.href='@redirectUrl'"
                            aria-label="Click to view or edit stock entry">
                            <td>@billNo</td>
                            <td>@row["ItemName"]</td>
                            <td class="text-center">@(row["Pc"] != DBNull.Value ? row["Pc"] : "0")</td>
                            <td class="text-center">@(row["Weight"] != DBNull.Value ? row["Weight"] : "0.00")</td>
                            <td class="text-center">@(row["Less"] != DBNull.Value ? row["Less"] : "0.00")</td>
                            <td class="text-center">@row["NetWt"]</td>
                            <td class="text-center">@(row["Tunch"] != DBNull.Value ? Convert.ToDecimal(row["Tunch"]).ToString("F2") : "0.00")</td>
                            <td class="text-center">@(row["Wastage"] != DBNull.Value ? Convert.ToDecimal(row["Wastage"]).ToString("F2") : "0.00")</td>
                            <td class="text-center">@((row["Tunch"] != DBNull.Value && row["Wastage"] != DBNull.Value) ? (Convert.ToDecimal(row["Tunch"]) + Convert.ToDecimal(row["Wastage"])).ToString("F2") : "0.00")</td>
                            <td class="text-center">@row["Fine"]</td>
                            <td class="text-center">@row["Amount"]</td>
                            <td class="text-center">@Convert.ToDateTime(row["LastUpdated"]).ToString("yyyy-MM-dd")</td>
                        </tr>
                    }
                </tbody>
                <tfoot class="bg-secondary text-white text-center">
                    @{
                        int totalPc = Model.AsEnumerable().Sum(row => row.Field<int?>("Pc") ?? 0);
                        decimal totalGrossWt = Model.AsEnumerable().Sum(row => row.Field<decimal?>("Weight") ?? 0);
                        decimal totalLess = Model.AsEnumerable().Sum(row => row.Field<decimal?>("Less") ?? 0);
                        decimal totalNetWt = Model.AsEnumerable().Sum(row => row.Field<decimal?>("NetWt") ?? 0);
                        decimal totalTunch = Model.AsEnumerable().Sum(row => row.Field<decimal?>("Tunch") ?? 0);
                        decimal totalWastage = Model.AsEnumerable().Sum(row => row.Field<decimal?>("Wastage") ?? 0);
                        decimal totalFine = Model.AsEnumerable().Sum(row => row.Field<decimal?>("Fine") ?? 0);
                        decimal totalAmount = Model.AsEnumerable().Sum(row => row.Field<decimal?>("Amount") ?? 0);
                    }
                    <tr>
                        <td></td>
                        <td class="text-right"><strong>Total:</strong></td>
                        <td>@totalPc</td>
                        <td>@totalGrossWt.ToString("F2")</td>
                        <td></td>
                        <td>@totalNetWt.ToString("F2")</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>@totalFine.ToString("F2")</td>
                        <td>@totalAmount.ToString("F2")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@(ViewBag.CurrentPage > 1 ? Url.Action("ViewStock", "OpeningStock", new { page = ViewBag.CurrentPage - 1 }) : "#")"
                        @(ViewBag.CurrentPage > 1 ? "" : "onclick='return false;'") aria-label="Previous">
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "active" : "")">
                        <a class="page-link" href="@Url.Action("ViewStock", "OpeningStock", new { page = 1 })">1</a>
                    </li>
                    @if (ViewBag.TotalPages > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link">...</span>
                        </li>
                    }
                    @if (ViewBag.TotalPages > 1 && ViewBag.CurrentPage != ViewBag.TotalPages)
                    {
                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "active" : "")">
                            <a class="page-link" href="@Url.Action("ViewStock", "OpeningStock", new { page = ViewBag.TotalPages })">@ViewBag.TotalPages</a>
                        </li>
                    }
                    <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="@(ViewBag.CurrentPage < ViewBag.TotalPages ? Url.Action("ViewStock", "OpeningStock", new { page = ViewBag.CurrentPage + 1 }) : "#")"
                        @(ViewBag.CurrentPage < ViewBag.TotalPages ? "" : "onclick='return false;'") aria-label="Next">
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>

        <div class="mt-3 text-center">
            <a href="@Url.Action("AddOpeningStock", "OpeningStock")" class="btn btn-primary">Add Opening Stock</a>
            <a href="@Url.Action("AddNewStock", "OpeningStock")" class="btn btn-primary">Add New Stock</a>
            <a href="@Url.Action("PrintStock", "OpeningStock")" class="btn btn-info" target="_blank">Print</a>
            <a href="@Url.Action("ExportToExcel", "OpeningStock")" class="btn btn-secondary">Export to Excel</a>
        </div>
    </div>
</div>

<style>
    .zoom-row {
        transition: transform 0.2s ease;
    }

        .zoom-row:hover {
            transform: scale(1.02);
            background-color: #f5f5f5;
        }

    .pagination .page-link {
        cursor: pointer;
    }

    .pagination .disabled .page-link {
        cursor: not-allowed;
    }
</style>