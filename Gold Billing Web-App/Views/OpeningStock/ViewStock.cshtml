@using System.Data
@model DataTable

<div class="card shadow-lg border-0" style="border-radius: 20px; overflow: hidden; background: linear-gradient(145deg, #ffffff, #f0f4f8);">
    <div class="card-body p-5" style="position: relative;">
        <h3 class="mt-3 mb-5 text-center text-uppercase fw-bold" style="color: #1e3a8a; letter-spacing: 2px; font-size: 28px; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1); animation: fadeInDown 1s ease;">Current Stock</h3>

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-info alert-dismissible fade show shadow-sm" role="alert" style="border-radius: 12px; background: linear-gradient(135deg, #e0f7fa, #b2ebf2); color: #0c5460;">
                @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert" style="border-radius: 12px; background: linear-gradient(135deg, #ffebee, #ffcdd2); color: #721c24;">
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <hr class="my-4" style="border: 2px solid #e2e8f0; border-radius: 5px;">

        <div class="table-responsive rounded-3 shadow" style="max-height: 500px; overflow-y: auto; overflow-x: hidden; width: 100%; background: #fff; border: 2px solid #e2e8f0;">
            <table class="table table-striped table-hover mb-0" style="width: 100%;">
                <thead style="background: linear-gradient(135deg, #1e3a8a, #3b82f6); color: white; font-size: 14px; text-transform: uppercase; position: sticky; top: 0; z-index: 1; box-shadow: inset 0 2px 10px rgba(0, 0, 0, 0.2);">
                    <tr class="text-center">
                        <th style="padding: 12px;">Bill No</th>
                        <th style="padding: 12px;">Item Name</th>
                        <th style="padding: 12px;">Pc</th>
                        <th style="padding: 12px;">Gr.Wt.</th>
                        <th style="padding: 12px;">Less</th>
                        <th style="padding: 12px;">Net Wt.</th>
                        <th style="padding: 12px;">Tunch</th>
                        <th style="padding: 12px;">Wastage</th>
                        <th style="padding: 12px;">T+W</th>
                        <th style="padding: 12px;">Fine</th>
                        <th style="padding: 12px;">Amount</th>
                        <th style="padding: 12px;">Last Updated</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Rows.Count > 0)
                    {
                        @foreach (DataRow row in Model.Rows)
                        {
                            string redirectUrl = Url.Action("StockDetails", "OpeningStock", new { itemId = row["ItemId"] });
                            <tr class="zoom-row" style="background: linear-gradient(145deg, #ffffff, #f8fafc); transition: all 0.3s ease; cursor: pointer;"
                                onclick="window.location.href='@redirectUrl'" aria-label="Click to view stock details">
                                <td class="fw-medium" style="color: #4b5e6d;">@row["BillNo"]</td>
                                <td style="color: #333;">@row["ItemName"]</td>
                                <td class="text-center">@(row["Pc"] != DBNull.Value ? row["Pc"] : "0")</td>
                                <td class="text-center">@(row["Weight"] != DBNull.Value ? row["Weight"] : "0.00")</td>
                                <td class="text-center">@(row["Less"] != DBNull.Value ? row["Less"] : "0.00")</td>
                                <td class="text-center fw-bold" style="color: #2980b9;">@row["NetWt"]</td>
                                <td class="text-center">@(row["Tunch"] != DBNull.Value ? Convert.ToDecimal(row["Tunch"]).ToString("F2") : "0.00")</td>
                                <td class="text-center">@(row["Wastage"] != DBNull.Value ? Convert.ToDecimal(row["Wastage"]).ToString("F2") : "0.00")</td>
                                <td class="text-center">@((row["Tunch"] != DBNull.Value && row["Wastage"] != DBNull.Value) ? (Convert.ToDecimal(row["Tunch"]) + Convert.ToDecimal(row["Wastage"])).ToString("F2") : "0.00")</td>
                                <td class="text-center fw-bold" style="color: #27ae60;">@row["Fine"]</td>
                                <td class="text-center fw-bold" style="color: #e74c3c;">@row["Amount"]</td>
                                <td class="text-center" style="color: #555;">@Convert.ToDateTime(row["LastUpdated"]).ToString("yyyy-MM-dd")</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr style="background: #f9fafb;">
                            <td colspan="12" class="text-center" style="color: #6b7280; padding: 20px;">No stock entries found.</td>
                        </tr>
                    }
                </tbody>
                <tfoot style="background: linear-gradient(135deg, #4b5563, #1f2937); color: white; font-size: 14px;">
                    @{
                        int totalPc = Model?.AsEnumerable().Sum(row => row.Field<int?>("Pc") ?? 0) ?? 0;
                        decimal totalGrossWt = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("Weight") ?? 0) ?? 0;
                        decimal totalLess = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("Less") ?? 0) ?? 0;
                        decimal totalNetWt = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("NetWt") ?? 0) ?? 0;
                        decimal totalTunch = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("Tunch") ?? 0) ?? 0;
                        decimal totalWastage = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("Wastage") ?? 0) ?? 0;
                        decimal totalFine = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("Fine") ?? 0) ?? 0;
                        decimal totalAmount = Model?.AsEnumerable().Sum(row => row.Field<decimal?>("Amount") ?? 0) ?? 0;
                    }
                    <tr class="text-center">
                        <td></td>
                        <td class="text-right fw-bold">Total:</td>
                        <td>@totalPc</td>
                        <td>@totalGrossWt.ToString("F2")</td>
                        <td></td>
                        <td>@totalNetWt.ToString("F2")</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>@totalFine.ToString("F2")</td>
                        <td>@totalAmount.ToString("F2")</td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>

        <div class="mt-5">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center gap-2">
                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link rounded-pill shadow-sm" href="@(ViewBag.CurrentPage > 1 ? Url.Action("ViewStock", "OpeningStock", new { page = ViewBag.CurrentPage - 1 }) : "#")"
                        @(ViewBag.CurrentPage > 1 ? "" : "onclick='return false;'") aria-label="Previous" style="background: linear-gradient(135deg, #3b82f6, #1e40af); color: white;">
                            <span aria-hidden="true">«</span>
                        </a>
                    </li>
                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "active" : "")">
                        <a class="page-link rounded-pill shadow-sm" href="@Url.Action("ViewStock", "OpeningStock", new { page = 1 })" style="background: @(ViewBag.CurrentPage == 1 ? "linear-gradient(135deg, #10b981, #047857)" : "#fff"); color: @(ViewBag.CurrentPage == 1 ? "white" : "#2980b9");">1</a>
                    </li>
                    @if (ViewBag.TotalPages > 2)
                    {
                        <li class="page-item disabled">
                            <span class="page-link rounded-pill shadow-sm" style="background: #fff; color: #6b7280;">...</span>
                        </li>
                    }
                    @if (ViewBag.TotalPages > 1 && ViewBag.CurrentPage != ViewBag.TotalPages)
                    {
                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "active" : "")">
                            <a class="page-link rounded-pill shadow-sm" href="@Url.Action("ViewStock", "OpeningStock", new { page = ViewBag.TotalPages })" style="background: @(ViewBag.CurrentPage == ViewBag.TotalPages ? "linear-gradient(135deg, #10b981, #047857)" : "#fff"); color: @(ViewBag.CurrentPage == ViewBag.TotalPages ? "white" : "#2980b9");">@ViewBag.TotalPages</a>
                        </li>
                    }
                    <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                        <a class="page-link rounded-pill shadow-sm" href="@(ViewBag.CurrentPage < ViewBag.TotalPages ? Url.Action("ViewStock", "OpeningStock", new { page = ViewBag.CurrentPage + 1 }) : "#")"
                        @(ViewBag.CurrentPage < ViewBag.TotalPages ? "" : "onclick='return false;'") aria-label="Next" style="background: linear-gradient(135deg, #3b82f6, #1e40af); color: white;">
                            <span aria-hidden="true">»</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>

        <div class="mt-5 text-center d-flex justify-content-center gap-3 flex-wrap">
            <a href="@Url.Action("AddOpeningStock", "OpeningStock")" class="btn btn-gradient btn-primary shadow-lg" style="border-radius: 50px; padding: 12px 25px;">Add Opening Stock</a>
            <a href="@Url.Action("AddNewStock", "OpeningStock")" class="btn btn-gradient btn-primary shadow-lg" style="border-radius: 50px; padding: 12px 25px;">Add New Stock</a>
            <a href="@Url.Action("PrintStock", "OpeningStock")" class="btn btn-gradient btn-info shadow-lg" style="border-radius: 50px; padding: 12px 25px;" target="_blank">Print</a>
            <a href="@Url.Action("ExportToExcel", "OpeningStock")" class="btn btn-gradient btn-secondary shadow-lg" style="border-radius: 50px; padding: 12px 25px;">Export to Excel</a>
        </div>
    </div>
</div>

@if (TempData["SweetAlertMessage"] != null)
{
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: '@TempData["SweetAlertMessage"]',
                confirmButtonText: 'OK',
                confirmButtonColor: '#2ecc71'
            });
        });
    </script>
}

<style>
    /* Card Styling */
    .card {
        transition: all 0.3s ease;
    }

    /* Button Gradient Base */
    .btn-gradient {
        background: linear-gradient(135deg, #3b82f6, #1e40af);
        border: none;
        padding: 10px 20px;
        transition: all 0.4s ease;
        color: white;
        font-weight: 500;
        font-size: 15px;
    }

        .btn-gradient.btn-info {
            background: linear-gradient(135deg, #22d3ee, #06b6d4);
        }

        .btn-gradient.btn-secondary {
            background: linear-gradient(135deg, #6b7280, #4b5563);
        }

        .btn-gradient:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
        }

    /* Table Styling */
    .table th, .table td {
        vertical-align: middle;
        padding: 12px;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background: #f9fafb;
    }

    .table-hover tbody tr.zoom-row:hover {
        transform: scale(1.02);
        background: linear-gradient(145deg, #eff6ff, #dbeafe);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    /* Pagination Styling */
    .pagination .page-link {
        cursor: pointer;
        padding: 10px 16px;
        margin: 0 4px;
        transition: all 0.3s ease;
        border: none;
    }

        .pagination .page-link:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

    .pagination .disabled .page-link {
        cursor: not-allowed;
        opacity: 0.6;
        transform: none;
        box-shadow: none;
    }

    .pagination .active .page-link {
        transform: scale(1.05);
    }

    /* Animations */
    @@keyframes fadeInDown {
        from

    {
        opacity: 0;
        transform: translateY(-20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    /* Shadow and Depth */
    .shadow {
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .shadow-sm {
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }
</style>