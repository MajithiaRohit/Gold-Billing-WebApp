@model Gold_Billing_Web_App.Models.AmountTransactionModel

<div class="container-sm p-3" style="background-color: lightsteelblue; border-radius: 10px;">
    <h4>PAYMENT / RECEIVE</h4>
    <hr>
    <form id="transactionForm" asp-action="GenerateAmountTransactionVoucher" method="post">
        @Html.AntiForgeryToken()
        <div class="row mb-3">
            <div class="col-md-3">
                <label>Bill No</label>
                <input asp-for="BillNo" class="form-control" readonly />
            </div>
            <div class="col-md-3">
                <label>Date</label>
                <input asp-for="Date" type="date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label>Account Name</label>
                <select asp-for="AccountId" class="form-control" onchange="fetchPreviousBalance()">
                    <option value="">Select Account</option>
                    @foreach (var account in ViewBag.AccountDropDown)
                    {
                        <option value="@account.AccountId" data-group="@account.AccountGroup">@account.AccountName</option>
                    }
                </select>
                <span asp-validation-for="AccountId" class="text-danger"></span>
            </div>
        </div>
        <div class="mb-2">
            <div>
                <input asp-for="Type" type="radio" name="Type" value="Payment" checked onchange="updateBalances()" /> Payment
                <input asp-for="Type" type="radio" name="Type" value="Receive" onchange="updateBalances()" /> Receive
            </div>
        </div>
        <div class="row mb-2">
            <div class="col-md-3">
                <label>Payment Mode</label>
                <select asp-for="PaymentModeId" class="form-control">
                    <option value="">Select Payment Mode</option>
                    @foreach (var mode in ViewBag.PaymentModeDropDown)
                    {
                        <option value="@mode.Id">@mode.ModeName</option>
                    }
                </select>
                <span asp-validation-for="PaymentModeId" class="text-danger"></span>
            </div>
            <div class="col-md-3">
                <label>Amount</label>
                <input asp-for="Amount" type="number" step="0.01" class="form-control" oninput="updateBalances()" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-6">
                <label>Narration</label>
                <textarea asp-for="Narration" class="form-control"></textarea>
                <span asp-validation-for="Narration" class="text-danger"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label>Previous Balance</label>
                <input id="prevAmount" type="number" step="0.01" class="form-control" readonly />
            </div>
            <div class="col-md-4">
                <label>Current Transaction</label>
                <input id="currentAmount" type="number" step="0.01" class="form-control" readonly />
            </div>
            <div class="col-md-4">
                <label>Final Balance</label>
                <input id="finalAmount" type="number" step="0.01" class="form-control" readonly />
            </div>
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="reset" class="btn btn-secondary" onclick="resetForm()">Cancel</button>
        </div>
    </form>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        updateBalances();
    });

    function fetchPreviousBalance() {
        let accountId = document.getElementById('AccountId').value;
        if (!accountId) {
            document.getElementById('prevAmount').value = "0.00";
            updateBalances();
            return;
        }

        fetch(`/AmmountTransection/GetPreviousBalance?accountId=${accountId}`)
            .then(response => response.json())
            .then(data => {
                document.getElementById('prevAmount').value = data.amount.toFixed(2);
                updateBalances();
            })
            .catch(error => {
                console.error('Error fetching previous balance:', error);
                document.getElementById('prevAmount').value = "0.00";
                updateBalances();
            });
    }

    function updateBalances() {
        let prevAmount = parseFloat(document.getElementById('prevAmount').value) || 0;
        let amount = parseFloat(document.getElementById('Amount').value) || 0;
        let type = document.querySelector('input[name="Type"]:checked').value;
        let accountGroup = document.getElementById('AccountId').options[document.getElementById('AccountId').selectedIndex]?.getAttribute('data-group') || '';

        let currentAmount = 0;
        let finalAmount = 0;

        if (accountGroup === 'Supplier') {
            currentAmount = (type === 'Payment') ? -amount : amount;
        } else if (accountGroup === 'Customer') {
            currentAmount = (type === 'Payment') ? amount : -amount;
        }

        finalAmount = prevAmount + currentAmount;

        document.getElementById('currentAmount').value = currentAmount.toFixed(2);
        document.getElementById('finalAmount').value = finalAmount.toFixed(2);
    }

    function resetForm() {
        document.getElementById('transactionForm').reset();
        document.getElementById('BillNo').value = '@Model.BillNo';
        document.getElementById('prevAmount').value = "0.00";
        document.getElementById('currentAmount').value = "0.00";
        document.getElementById('finalAmount').value = "0.00";
    }

    document.getElementById('transactionForm').addEventListener('submit', function (e) {
        e.preventDefault();

        let accountId = document.getElementById('AccountId').value;
        let paymentModeId = document.getElementById('PaymentModeId').value;
        let amount = parseFloat(document.getElementById('Amount').value) || 0;

        if (!accountId || !paymentModeId || amount <= 0) {
            Swal.fire({
                icon: 'error',
                title: 'Validation Error',
                text: 'Please select an account, payment mode, and enter a valid amount.',
            });
            return;
        }

        let formData = new FormData(this);
        fetch('@Url.Action("GenerateAmountTransactionVoucher", "AmmountTransection")', {
            method: 'POST',
            body: formData,
            headers: {
                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Transaction saved successfully!',
                    timer: 1500,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = data.redirectUrl;
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.error || 'Failed to save the transaction.'
                });
            }
        })
        .catch(error => {
            console.error('Error during save:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'An error occurred while saving.'
            });
        });
    });
</script>